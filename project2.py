# -*- coding: utf-8 -*-
"""Project2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1x5I92SzBvCbXtEPelkSiDbdEmBMmliEu

**Importing Libraries**
"""

import pandas as pd
import numpy as np
import plotly.express as px

"""Read csv **file**"""

df = pd.read_csv('apple.csv')

""" **Returnig info of csv file**"""

df.info()

"""**Describing csv file**"""

df.describe()

"""**First 10 rows of csv file**"""

df.head(10)

"""**Last 10 rows of csv file**"""

df.tail(10)

"""**Return not null data**"""

df.isnull().sum()

"""# All iphones and their ratings"""

df[['Product Name','Star Rating']]

"""# Top 5 star rating apple phones"""

df_sorted = df.sort_values('Star Rating', ascending=False)
df_sorted.head(5)

"""#Top 10 Iphones and their rating according to their Number Of Ratings"""

label = df_sorted.head(10).index
counts = df['Number Of Ratings'].head(10)
fig = px.bar(x=label, y=counts, title='Number Of Ratings')
fig.show()

"""# Most expensive Iphone"""

most_expensive = df.loc[df['Sale Price'].idxmax()]
most_expensive

"""#Least expensive Iphone"""

least_expensive = df.loc[df['Sale Price'].idxmin()]
least_expensive

"""# Lowest 5 star rating apple phones"""

df_sorted = df.sort_values('Star Rating')
df_sorted.head(5)

"""# Apple phone have highest number of reviews"""

df_highest_reviews = df.sort_values('Number Of Reviews', ascending=False)
df_highest_reviews.head(1)

"""# Apple phone have lowest number of reviews"""

df_lowest_reviews = df.sort_values('Number Of Reviews')
df_lowest_reviews.head(1)

"""# Top 10 Iphones and their reviews , according to their Number Of Review"""

label = df_highest_reviews.index.head(10)
counts = df['Number Of Reviews'].head(10)
fig = px.bar(df,x=label,y=counts,title='Number Of Reviews')
fig.show()

"""# Relationship between sale price and number of ratings"""

correlation = df['Sale Price'].corr(df['Number Of Ratings'])
print(correlation)

"""# Relationship between sale price and number of reviews"""

correlation = df['Sale Price'].corr(df['Number Of Reviews'])
print(correlation)

"""# Relationship between discount percentage and number of ratings"""

correlation = df['Discount Percentage'].corr(df['Number Of Ratings'])
print(correlation)

"""# Relationship between discount percentage and number of reviews"""

correlation = df['Discount Percentage'].corr(df['Number Of Reviews'])
print(correlation)

"""# Most expensive and least expensive apple phone"""

df_sorted = df.sort_values('Sale Price', ascending=False)
most_expensive_phone = df_sorted.iloc[0]
most_expensive_phone

"""# Iphone Sale Price and Rating relationship"""

fg = px.scatter(data_frame=df, x='Number Of Ratings', y='Sale Price', size='Discount Percentage', trendline='ols',title='Sale Price VS Rating')
fg.show()

"""# Iphone Discount Percentage and Rating Relationship"""

fg = px.scatter(data_frame=df, x='Number Of Ratings', y='Discount Percentage', size='Sale Price', trendline='ols',title='Discount Percentage VS Rating')
fg.show()

"""#Most Expensive and Least Expensive Iphone"""

product_sale_price = df[['Product Name','Sale Price']]
product_sale_price

"""#Sale prices of iphone"""

sale_price = product_sale_price['Sale Price']
sale_price